{
	"name": "nb_ongoing_calendar_dim",
	"properties": {
		"folder": {
			"name": "adv/pySpark/calendar_dim"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "coursepool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "b577bec5-e3e1-4104-b3a0-09b51ff79d20"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/e8466fdf-9bf5-4a95-b888-76e57bd31ac5/resourceGroups/synapse-course-rg/providers/Microsoft.Synapse/workspaces/synapse-course-isws/bigDataPools/coursepool",
				"name": "coursepool",
				"type": "Spark",
				"endpoint": "https://synapse-course-isws.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/coursepool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 5
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"base_path = \"abfss://adventure-works@issynapsecoursedl.dfs.core.windows.net\"\r\n",
					"\r\n",
					"sys = mssparkutils.notebook\r\n",
					"\r\n",
					"raw_folder_path = f'{base_path}/raw'\r\n",
					"\r\n",
					"try:\r\n",
					"    raw_df = spark.read.parquet(f\"{raw_folder_path}/calendar/*.parquet\")\r\n",
					"except:\r\n",
					"    sys.exit(f\"cannot load batch_dt={esp_date} file\")  \r\n",
					"\r\n",
					"raw_df.createOrReplaceTempView('ref_raw')\r\n",
					"\r\n",
					"sql = f\"\"\"\r\n",
					"select \r\n",
					"       day_id\r\n",
					"      ,month_id\r\n",
					"      ,year_id\r\n",
					"      ,fiscal_month_nm\r\n",
					"      ,fiscal_quarter_nm\r\n",
					"      ,fiscal_year_nm\r\n",
					"      , CURRENT_TIMESTAMP as load_ts \r\n",
					"  from ref_raw\r\n",
					"\"\"\"\r\n",
					"raw_df = spark.sql(sql)\r\n",
					"raw_df.createOrReplaceTempView('ref_raw')\r\n",
					"#raw_df.show(50)\r\n",
					"\r\n",
					"raw_df.repartition(1).write.mode(\"overwrite\").format(\"delta\").saveAsTable(\"adv_edw.calendar_dim\")"
				],
				"execution_count": 39
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"DESCRIBE HISTORY adv_edw.calendar_dim"
				],
				"execution_count": 41
			}
		]
	}
}