{
	"name": "pl_init_load_product_dim",
	"properties": {
		"activities": [
			{
				"name": "Recreate Product Dim Table",
				"type": "SynapseNotebook",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "recreate product_dim table",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "coursepool",
						"type": "BigDataPoolReference"
					},
					"conf": {
						"spark.dynamicAllocation.enabled": false,
						"spark.dynamicAllocation.minExecutors": 2,
						"spark.dynamicAllocation.maxExecutors": 2
					},
					"numExecutors": 2
				}
			},
			{
				"name": "Get Dates",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Recreate Product Dim Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_adv_raw",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "select date_id as esp_dt\n  from bronze.vw_calendar\n where date_id \n between @{pipeline().parameters.start_date}\n     and @{pipeline().parameters.end_date}\n order by date_id",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "ForEachDates",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Dates",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Dates').output.resultSets[0].Rows",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Load Daily Batch Product Dim",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_daily_load_product_dim",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"esp_date": {
										"value": "@item().esp_dt",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"start_date": {
				"type": "string",
				"defaultValue": "20170711"
			},
			"end_date": {
				"type": "string",
				"defaultValue": "20170715"
			}
		},
		"folder": {
			"name": "adv/edw/product_dim"
		},
		"annotations": [],
		"lastPublishTime": "2023-11-06T12:53:20Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}